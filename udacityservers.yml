Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

Resources:

ListS3BucketsRole:
    Type: AWS::IAM::Role
    Properties: 
        AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
                - Effect: Allow
                  Principal:
                    Service:
                    - ec2.amazonaws.com
                  Action:
                  - sts:AssumeRole
        Path: "/"
ListS3BucketsPolicy:
    Type: AWS::IAM::Policy
    Properties:
        PolicyName: ListS3BucketsPolicy
        PolicyDocument:
            Statement:
                - Effect: Allow
                  Action:
                  - s3:List*
                  Resource: "*"
        Roles:
        - Ref: ListS3BucketsRole

ListS3BucketsInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
        Path: "/"
        Roles:
        - Ref: ListS3BucketsRole

LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
WebServerSecGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow http to our hosts and SSH from local only
        VpcId:
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 
        SecurityGroupEgress: 
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 
        SecurityGroupEgress: 
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

WebaPPLaunchConfig: 
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties:
          UserData:
            Fn::Base64: !Sub |
              #!/bin/bash
              apt-get update -y
              apt-get install unzip awscli -y
              apt-get install apache2 -y
              systemctl start apache2.service
              cd /var/www/html
              aws s3 cp s3://udacity-demo-1/udacity.zip .
              unzip -o udacity.zip
          ImageId: ami-005bdb005fb00e791
          IamInstanceProfile: !Ref ListS3BucketsInstanceProfile
          SecurityGroups:
          - Ref: WebServerSecGroup
          InstanceType: t3.small
          -DeviceName: "/dev/sdk"
          VolumeSize: '10'
          WebAppGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
      VPCZoneIdentifier:
      - Fn::Importvalue:
          !Sub "{EnvironmentName}-PRIV-NETS"                     
      - Ref: WebAppLaunchConfig             
      MinSize: "3"  
      MaxSize: "5"

WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 35
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 30
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"
          LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebServerTargetGroup   
   
  